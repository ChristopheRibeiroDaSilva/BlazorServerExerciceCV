@using CV_RibeiroChristophe.Authentication
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Ribeiro Da Silva Christophe</PageTitle>

<div class="page">
    <div class="sidebar" style="width:auto">
        <NavMenu />
    </div>

    <main>
        <div class="top-row justify-content-center">
            <h1> .Net Developer </h1>

            <AuthorizeView Roles="admin,guest">
                <Authorized>
                    <div class="top-row" style="position: fixed;margin-right: 5%;right: 0;">
                        <NavLink href="javascript:void(0)" @onclick="(() => Logout())">Logout</NavLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="top-row" style="position: fixed;margin-right: 5%;right: 0;">
                        <NavLink href="javascript:void(0)" @onclick="(() => Login())">Log In</NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>



@code {

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }


    public async Task Logout()
    {
        var customAuthenticationProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("", true);
    }
    public void Login()
    {
       
        NavigationManager.NavigateTo("", true);
    }
}