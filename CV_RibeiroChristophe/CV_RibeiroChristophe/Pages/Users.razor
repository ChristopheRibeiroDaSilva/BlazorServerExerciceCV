@page "/Users"

@attribute [Authorize(Roles = "admin")]

@using CV_RibeiroChristophe.Data
@using CV_RibeiroChristophe.Authentication
@using System.Security.Claims

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUserAccountService userAccountService


@if (ListUsers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Login</th>
                <th>Password</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in ListUsers)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.login</td>
                    <td>@user.password</td>
                    <td>@user.role</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<UserAccount> ListUsers;

    protected override async Task OnInitializedAsync()
    {
        ListUsers = await userAccountService.GetListUser();
    }

}
